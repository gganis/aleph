#if defined(KINETEST)
      SUBROUTINE ASKUSI(IGCOD)
C--------------------------------------------------------------------
C        Author : B. Bloch-Devaux sept. 87
C! Init routine example #1
CKEY KINE KINGAL EXAMPLE   /USER
C     structure : subroutine
C
C     input     : none
C
C     output    : generator code IGCOD as defined in the KINGAL library
C  Example of a very simple generator :
C  -internal particle numbering is Aleph one
C  -no extra particles are needed by the generator
C  -no decay was allowed in the generator
C--------------------------------------------------------------------
#ifndef DOC
#include "bcs.h"
      SAVE
      COMMON/GENMAS/ GMAS(50)
      DIMENSION GPAR(10)
      INTEGER ALTABL
C    IGCOD is 1001 for this generator
      PARAMETER ( IGCO  =  1001 )
#include "bmacro.h"
#include "kmacro.h"
C
C   Return generator code IGCOD
C
      IGCOD = IGCO
C
C  Force generator's masses for standard particles to be Aleph ones
C     assume they are in common /GENMAS/
      NAPAR=NAMIND('PART')
      NMAX=LROWS(IW(NAPAR))
      DO 10 I=1,NMAX
         GMAS(I)=PARMAS(I)
   10 CONTINUE
C
C   get Generator parameters ( from a data card if you want
C    or by default values if you prefer)
C
      NPARA=NAMIND('PARA')
      ID=IW(NPARA)
      IF (ID.NE.0) THEN
         NPA = IW(ID)
         CALL UCOPY(IW(ID+1),GPAR(1),NPA)
      ENDIF
C
C  Then init the generator with needed parameters
C
C------------------------------------------------------------------
C  let's assume we init the generator by the following call
CCCC  CALL INIGEN(GPAR)
C----------------------------------------------------------------------
C
C   dump the generator parameters for this run in a bank
C assume all parameters are real and stored as a single row
C
      IND=ALTABL('KGPA',NPA,1,GPAR,'2I,F','C')
C  Print PART and KLIN banks
C
      CALL PRPART
C
      RETURN
      END
      SUBROUTINE ASKUSE (IDPR,ISTA,NTRK,NVRT,ECMS,WEIT)
C--------------------------------------------------------------------
C        Author : B. Bloch-Devaux sept. 87
C! Process routine example #1
CKEY KINE KINGAL EXAMPLE   /USER
C  In this simple case you need to :
C - generate the primary vertex coordinates
C - call your generator routine to generate one event
C - fill KINE , VERT , KHIS banks
C     structure : subroutine
C
C     input     : none
C
C     output    : 6 arguments
C          IDPRO  : process identification if meanigful
C          ISTAT  : status flag ( 0 means ok), use it to reject
C                   unwanted events
C          NTRK   : number of tracks generated and kept
C                  (i.e. # KINE banks  written)
C          NVRT   : number of vertices generated
C                   (i.e. # VERT banks written)
C          ECMS   : center of mass energy for the event (may be
C                   different from nominal cms energy)
C          WEIT   : event weight ( not 1 if a weighting method is used)
C--------------------------------------------------------------------
#include "bcs.h"
      COMMON /KGCOMM/ IST,ECM,WEI,IDP
      DIMENSION SVERT(3),VERT(4),TABL(3)
      DIMENSION P(4),Q(4),R(4),E1(4),E2(4)
      INTEGER ALTABL
      DATA IFI /0/
      LENTRY = 2
C
C  Generate vertex postion
C
      IF ( IFI.EQ.0 ) THEN
C  if you need the standard interaction point
C  you may get the sigmas of the gaussion smearing
C  from a data card if you like it
C   SVER sx  sy  sz
C
      NASVER=NAMIND('SVER')
      JSVER=IW(NASVER)
      IF (JSVER.NE.0) THEN
         SVERT(1)=RW(JSVER+1)
         SVERT(2)=RW(JSVER+2)
         SVERT(3)=RW(JSVER+3)
      ENDIF
      IFI = IFI+1
      ENDIF
      CALL RANNOR(RX,RY)
      CALL RANNOR(RZ,DUM)
      VERT(1)=RX*SVERT(1)
      VERT(2)=RY*SVERT(2)
      VERT(3)=RZ*SVERT(3)
      VERT(4)=0.
C
C   Book VERT bank #1
C
      IND=KBVERT(1,VERT,0)
      IF (IND.LE.0) GO TO 20
C
C   Assume the simple generator returns always 3 particles
C   with 4-momentum P , Q , R  and particule type ITYP1,2,3
C   Initial electrons beams are as well E1( e+) and E2 (e-)
C
C----------------------------------------------------------------------
C     let's assume we get an event generated by the following call
CCCC  CALL EVGEN(P,Q,R,E1,E2)
C     and that the particles have the aleph codes 1,2,3
      ITYP1=1
      ITYP2=2
      ITYP3=3
C----------------------------------------------------------------------
      IDPR = 0
      NTRK = 3
      NVRT = 1
      ISTA = IST
      ECMS = ECM
      WEIT = WEI
C
C  You can use the status word to decide not to keep the event
C  as you may generate only part of the particles spectra
C
C
C   Book KINE banks for beam electrons
C
      IND=KBKINE(-1,E1,2,0)
      JND=KBKINE(-2,E2,3,0)
      IF (IND*JND.EQ.0) GO TO 20
C
C   Book KINE banks for outgoing particles
C
      IND=KBKINE(1,P,ITYP1,1)
      IF (IND.EQ.0) GO TO 20
      IND=KBKINE(2,Q,ITYP2,1)
      IF (IND.EQ.0) GO TO 20
      IND=KBKINE(3,R,ITYP3,1)
      IF (IND.EQ.0) GO TO 20
C
C    Fill the history bank KHIS
C   Here the history is simple as all 3 outgoing part come from
C   the original interaction. Use an array(3) filled with zeroes
C
      DO 10 I=1,NTRK
   10 TABL(I)=0.
      IND=ALTABL('KHIS',1,NTRK,TABL,'I','E')
      IF (IND.LE.0) GO TO 20
      RETURN
   20 ISTA=1
      RETURN
      END
#endif
#endif
